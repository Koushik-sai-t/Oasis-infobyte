import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score , confusion_matrix , classification_report
from sklearn.metrics import precision_score, recall_score, f1_score
from sklearn.linear_model import LogisticRegression
import warnings
warnings.filterwarnings('ignore')
iris = sns.load_dataset('iris')
iris.head()
numerical_columns = iris.select_dtypes(include=['number'])
correlation_matrix = numerical_columns.corr()
correlation_matrix
iris.info()
iris['petal_width'].hist()
iris['petal_length'].hist()
iris['sepal_length'].hist()
iris['sepal_width'].hist()
iris['species'].value_counts()
sns.set_style("whitegrid")
sns.FacetGrid(iris, hue ="species", height = 6).map(plt.scatter,'sepal_length','petal_length').add_legend()
sns.set_style("whitegrid")
sns.FacetGrid(iris, hue ="species",height = 6).map(plt.scatter,'sepal_width',	'petal_width').add_legend()
sns.set_style("whitegrid")
sns.FacetGrid(iris, hue ="species",	height = 6).map(plt.scatter,	'sepal_length',	'sepal_width').add_legend()
sns.set_style("whitegrid")
sns.FacetGrid(iris, hue ="species",	height = 6).map(plt.scatter,	'petal_width',	'petal_length').add_legend()
plt.figure(figsize=(10,5))
sns.heatmap(correlation_matrix,annot=True , cmap='RdYlGn')
plt.title("Correlation of Iris dataset")
plt.show()
plt.figure(figsize=(8, 6))
sns.boxplot(data=iris)
plt.title("Data with Outliers")
plt.show()
X = iris.drop(['species'], axis=1)
y = iris['species']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
lg = LogisticRegression()
clf = lg.fit(X_train, y_train)
y_pred = clf.predict(X_test)
print(classification_report(y_test, y_pred))
print("Accuracy Score : ", accuracy_score(y_test, y_pred)*100)
