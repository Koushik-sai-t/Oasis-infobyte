import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Data Collection: Load the dataset
url = 'https://www.kaggle.com/code/ashydv/housing-price-prediction-linear-regression'
data = pd.read_csv(url)

# Data Exploration and Cleaning
print("Data Shape:", data.shape)
print("Data Columns:", data.columns)
print("Data Info:", data.info())
print("Data Describe:", data.describe())

# Handle missing values if any
data = data.dropna()  # Dropping rows with missing data

# Feature Selection: Select relevant features
X = data.drop(['MEDV'], axis=1)  # Features
y = data['MEDV']  # Target variable

# Model Training: Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Implement linear regression
lr_model = LinearRegression()
lr_model.fit(X_train, y_train)

# Model Evaluation: Evaluate the model's performance
y_pred = lr_model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("Mean Squared Error:", mse)
print("R-squared:", r2)

# Visualization: Create a scatter plot to illustrate the relationship between predicted and actual values
plt.scatter(y_test, y_pred)
plt.xlabel("Actual Values")
plt.ylabel("Predicted Values")
plt.title("Linear Regression Model")
plt.show()

# Save the model
import joblib
joblib.dump(lr_model, 'linear_regression_model.joblib')
