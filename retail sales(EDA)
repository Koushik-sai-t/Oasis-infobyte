# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# Load the dataset
url = ' https://www.kaggle.com/code/analystoleksandra/marketing-analytics-customer-segmentation/comments'
data = pd.read_csv(url)

# Data exploration and cleaning
print(data.head())
print(data.info())
print(data.describe())

# Handle missing data if any
# data = data.dropna() # Dropping rows with missing data
# data = data.fillna(data.mean()) # Filling missing data with mean

# Descriptive statistics
avg_purchase_value = data['purchase_value'].mean()
frequency_of_purchases = data['frequency_of_purchases'].mean()

# Customer segmentation
# Assuming 'purchase_value' and 'frequency_of_purchases' are the features for segmentation
features = data[['purchase_value', 'frequency_of_purchases']]

# Standardize the features
scaler = StandardScaler()
features_scaled = scaler.fit_transform(features)

# Apply KMeans clustering
kmeans = KMeans(n_clusters=3)  # Choose the appropriate number of clusters
features_scaled_kmeans = kmeans.fit_predict(features_scaled)
data['segment'] = features_scaled_kmeans

# Visualization
plt.figure(figsize=(10, 7))
sns.scatterplot(x='purchase_value', y='frequency_of_purchases', hue='segment', data=data)
plt.show()

# Insights and recommendations
# This will depend on the characteristics of each segment
# You can use groupby function to analyze each segment
segment_analysis = data.groupby('segment').mean()
print(segment_analysis)
